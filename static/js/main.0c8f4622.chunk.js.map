{"version":3,"sources":["components/logo.png","components/Header.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","src","LogoUrl","to","exact","activeClassName","currentUser","attributes","username","type","onClick","logout","push","Footer","footer","Loading","Home","lazy","History","About","Register","App","className","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginUser","error","logIn","logOut","current","UpLoader","file","filename","item","Object","avFile","File","set","save","serverFile","err","page","limit","query","Query","include","skip","descending","equalTo","find","results","console","log","catch","createWithoutData","id","destroy","makeObservable","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","res","filter","i","newFilename","newFile","isUpLoading","message","userName","values","success","resetUser","HistoryStory","reset","ImageStore","context","createContext","HistoryStore","window","stores","useContext"],"mappings":"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","file":"static/js/main.0c8f4622.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ff6a9e0c.png\";","import React, { useState, useEffect } from 'react'\r\nimport LogoUrl from './logo.png'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\nimport { useStores } from '../stores'\r\nimport { observer } from 'mobx-react'\r\n\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px 100px;\r\n    background-color: transparent;\r\n    color: #fff;\r\n`;\r\nconst Logo = styled.img`\r\n    height: 30px;\r\n    border-radius: 50%;\r\n`;\r\n//      这里的Link 是传递的参数，不是在前面加了个 .\r\nconst StyledLink = styled(NavLink)`\r\n    color: #fff;\r\n    margin-left: 30px;\r\n\r\n    &.active {\r\n        border-bottom: 1px solid #fff;\r\n    }\r\n`;\r\nconst Login = styled.div`\r\n    margin-left: auto;\r\n    text-decoration: none;\r\n    color: #fff;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    margin-left: 10px; \r\n`\r\n\r\n\r\n//    observer 实时监控数据的变动\r\nconst Component = observer(() => {\r\n\r\n    const history = useHistory()\r\n    const { UserStore, AuthStore } = useStores()\r\n    const handleLogout = () => {\r\n        AuthStore.logout()\r\n    }\r\n    const handleLogin = () => {\r\n        //跳转到登录页面\r\n        history.push('/login')\r\n    }\r\n    const handleRegister = () => {\r\n        //跳转到注册页面\r\n        history.push('/register')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserStore.pullUser()\r\n  },[])\r\n\r\n    return (\r\n        <Header>\r\n            <Logo src={LogoUrl} />\r\n            <nav>\r\n                <StyledLink to='/' exact activeClassName='active'>首页</StyledLink>\r\n                <StyledLink to='/history' activeClassName='active'>历史</StyledLink>\r\n                <StyledLink to='/about' activeClassName='active'>关于</StyledLink>\r\n            </nav>\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ? \r\n                    <>\r\n                        {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\r\n                    </> :\r\n                    <>\r\n                    <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                    <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                    </>\r\n                }               \r\n            </Login>\r\n        </Header>\r\n    )\r\n})\r\nexport default Component","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Footer = styled.footer`\r\n    padding: 10px 100px;\r\n    text-align: center;\r\n    font: 16px  \"fantasy\";\r\n    color:  red;\r\n    bottom: 0;\r\n    /* background-color: transparent; */\r\n`;\r\n\r\nfunction Component() {\r\n    return (\r\n        <Footer>\r\n            请科学上网 如有问题 本网站概不负责\r\n        </Footer>\r\n    )\r\n}\r\nexport default Component","import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>Loading...</div>\r\n    )\r\n}\r\n","import React, { Suspense, lazy } from 'react'\nimport './App.scss';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Loading from './components/Loading'\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'\n\n\nconst Home = lazy(() => import('./pages/Home'))\nconst History = lazy(() => import('./pages/History'))\nconst About = lazy(() => import('./pages/About'))\nconst Login = lazy(() => import('./pages/Login'))\nconst Register = lazy(() => import('./pages/Register'))\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/history' component={History} />\n            <Route path='/about' component={About} />\n            <Route path='/Login' component={Login} />\n            <Route path='/Register' component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport reportWebVitals from './reportWebVitals';\n// import Model from './models';\nimport {\n  HashRouter as Router\n} from 'react-router-dom'\n\nReactDOM.render(\n  \n    <Router>\n      <App />\n    </Router>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import AV, { Query, User } from 'leancloud-storage';\r\nimport resolve from 'resolve';\r\n\r\n\r\nAV.init({\r\n  appId: \"g2WSNJhaSM4a9KnNo6K2q1Qf-gzGzoHsz\",\r\n  appKey: \"myxtDHEwVrBC70maMDeu5pL3\",\r\n  serverURL: \"https://g2wsnjha.lc-cn-n1-shared.com\"\r\n})\r\n// 注册、登录、注销 组件\r\nconst Auth = {\r\n    // 注册逻辑\r\n    register(username, password) {\r\n        let user = new User() \r\n        user.setUsername(username)\r\n        user.setPassword(password)\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then(loginUser => resolve(loginUser), error => reject(error))\r\n        })\r\n    },\r\n    // 登录逻辑\r\n    login(username, password) {\r\n        return new Promise((resolve,reject) => {\r\n            User.logIn(username, password).then(loginUser => resolve(loginUser), error => reject(error)) \r\n        })\r\n    },\r\n    // 注销\r\n    logOut() {\r\n        User.logOut()\r\n    },\r\n    // 获取用户当前信息\r\n    getCurrentUser() {\r\n        return User.current()\r\n    }\r\n}\r\n// 对图片的 添加、查找 操作\r\nconst UpLoader = {\r\n    add(file, filename) {//添加图片信息\r\n        // 用来存储后台的图片信息\r\n        const item = new AV.Object('Image')\r\n        const avFile = new AV.File(filename, file)\r\n        \r\n        item.set('filename', filename)\r\n        item.set('owner', AV.User.current())\r\n        item.set('url', avFile)\r\n        return new Promise((resolve, reject) => {\r\n            item.save().then((serverFile) => resolve(serverFile), err => reject(err))\r\n        })   \r\n    },\r\n    find({page=0, limit=10}) {//查找图片信息\r\n        const query = new AV.Query('Image')\r\n        query.include('owner')\r\n        query.limit(limit)\r\n        query.skip(page*limit)\r\n        query.descending('createdAt') //descending 降序排列   ascending 升序排列\r\n        query.equalTo('owner', AV.User.current())\r\n        return new Promise((resolve, reject) => {\r\n            query.find().then(results => {\r\n                console.log('query')\r\n                console.log(results)\r\n                resolve(results)\r\n            }).catch(error => reject(error) )\r\n        })\r\n    },\r\n    destroy(item) {\r\n        const file =  AV.Object.createWithoutData('Image',item.id)\r\n\r\n        return new Promise((resolve, reject) => {\r\n            file.destroy().then(() => resolve('success')).catch(error => reject(error))  \r\n        })\r\n        \r\n    }\r\n}\r\n\r\n// 控制台验证\r\n// window.UpLoader = UpLoader\r\n\r\n\r\nexport {\r\n    Auth,\r\n    UpLoader\r\n}","// 存储的是用户的信息\r\nimport { observable, action, makeObservable } from 'mobx';\r\nimport { Auth } from '../models';\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    makeObservable(this)\r\n  }\r\n  @observable currentUser = null;\r\n  // 拿起用户的信息\r\n  @action pullUser() {\r\n    this.currentUser = Auth.getCurrentUser()\r\n  }\r\n  //  注销后清空用户信息\r\n  @action resetUser() {\r\n    this.currentUser = null;\r\n  }\r\n}\r\n\r\n\r\nexport default new UserStore();\r\n","\r\nimport { observable, action, makeObservable } from 'mobx'\r\nimport { UpLoader } from '../models'\r\nimport { message } from 'antd'\r\n\r\nclass HistoryStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @observable list = []\r\n    @observable isLoading = false\r\n    @observable hasMore = true\r\n    @observable page = 0\r\n    limit = 10    //不需要修改的数据，前面可以不用 @observable\r\n\r\n    @action append(newList) {\r\n        //合并两个或多个数组。此方法不更改现有数组，而是返回一个新数组\r\n        this.list = this.list.concat(newList)   \r\n        console.log(this.list)\r\n    }\r\n    @action find() {\r\n        this.isLoading = true\r\n        UpLoader.find({page: this.page, limit: this.limit})\r\n          .then(newList => {\r\n            this.append(newList)\r\n            this.page++\r\n            if(newList.length < this.limit) {\r\n                this.hasMore = false\r\n            }\r\n          }).catch(err => {\r\n              console.log('数据加载失败')\r\n            //   message.error('数据加载失败')\r\n          }).finally(()=> {\r\n              this.isLoading = false\r\n          })\r\n    }\r\n    @action reset() {\r\n        this.list = []\r\n        this.isLoading = false\r\n        this.hasMore = true\r\n        this.page = 0\r\n    }\r\n\r\n    @action destroy(item) {\r\n        UpLoader.destroy(item).then(res => {\r\n            console.log(res)\r\n            console.log('删除over    ')\r\n        })\r\n        this.list = this.list.filter(i => i!== item)\r\n        // this.isLoading = true\r\n        // UpLoader.destroy().then(newList => {\r\n        //     this.append(newList)\r\n        //     this.page--\r\n        //     if(newList.length < 0) {\r\n        //         this.hasMore = false\r\n        //     }\r\n        // }).catch(() => message.success('删除成功')).finally(()=> this.isLoading = false)\r\n\r\n        // this.list = this.list.concat(newList)\r\n    }\r\n\r\n}\r\nexport default new HistoryStore()","// 存放数据\r\nimport { observable, action, makeObservable } from 'mobx'\r\nimport { UpLoader } from '../models'\r\nimport { message } from 'antd'\r\n\r\nclass ImageStore {\r\n  constructor() {\r\n    makeObservable(this)\r\n  }\r\n  @observable filename = ''\r\n  @observable file = null\r\n  @observable isUpLoading = false\r\n  @observable serverFile = null\r\n\r\n  @action setFilename(newFilename) {\r\n    this.filename = newFilename\r\n  }\r\n\r\n  @action setFile(newFile) {\r\n      this.file = newFile\r\n  }\r\n\r\n@action upload() {\r\n    this.isUpLoading = true\r\n    this.serverFile = null  // 上传中 下面不会有图片产生\r\n    // 这里的promise 是为了后面 upload的 ImageStore.upload， 如果这里不封装，后面将不能继续 catch\r\n    return new Promise((resolve, reject) => {\r\n        UpLoader.add(this.file, this.filename)\r\n        .then(serverFile => {\r\n            this.serverFile = serverFile\r\n           resolve(serverFile)\r\n        }).catch(err => {\r\n            message.err('上传失败')\r\n            reject(err)\r\n        }).finally(() => {\r\n          this.isUpLoading = false\r\n        })\r\n    })\r\n}\r\n@action reset() {\r\n  this.isUpLoading = false\r\n  this.serverFile = null\r\n}\r\n@action destroy() {\r\n  this.isUpLoading = false\r\n  this.serverFile = null\r\n}\r\n\r\n}\r\n\r\n\r\nexport default new ImageStore();","// 管理登录注册\r\n// 这里存放的只是状态\r\nimport { observable, action, makeObservable } from 'mobx'\r\nimport { Auth } from '../models'\r\nimport UserStore from './user'\r\nimport { message } from 'antd'\r\nimport HistoryStory from './history'\r\nimport ImageStore from './image'\r\n\r\nclass AuthStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @observable values = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n    @action setUsername(userName) {\r\n        this.values.username = userName\r\n    }\r\n    @action setPassword(password) {\r\n        this.values.password = password\r\n    }\r\n\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            Auth.login(this.values.username, this.values.password)\r\n                .then(user => {// 登录成功,可以控制登录成功之后的行为\r\n                    UserStore.pullUser()\r\n                    message.success('登录成功')\r\n                    resolve(user)\r\n                }).catch(err => {// 登录失败，可以控制登录失败之后的行为\r\n                    UserStore.resetUser()\r\n                    message.error('用户名或密码错误')\r\n                    reject(err)\r\n                })\r\n        })\r\n    }\r\n\r\n    @action register() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username, this.values.password)\r\n                .then(user => {// 注册成功,可以控制注册成功之后的行为\r\n                    UserStore.pullUser()\r\n                    message.success('注册成功')\r\n                    resolve(user)\r\n                })\r\n                .catch(err => {// 注册失败，可以控制注册失败之后的行为\r\n                    UserStore.resetUser()\r\n                    message.error('注册失败')\r\n                    reject(err)\r\n                })\r\n        })\r\n    }\r\n\r\n    @action logout() {\r\n        Auth.logOut()\r\n        UserStore.resetUser()\r\n        HistoryStory.reset()\r\n        ImageStore.reset()\r\n    }\r\n}\r\n\r\nexport default new AuthStore()","import  {createContext, useContext} from 'react'\r\nimport AuthStore from './auth'\r\nimport UserStore from './user'\r\nimport ImageStore from './image'\r\nimport HistoryStore from './history'\r\n\r\nconst context = createContext({\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n})\r\n// 方便在控制台中操作\r\nwindow.stores ={\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n}\r\n\r\nexport const useStores = () => useContext(context)"],"sourceRoot":""}