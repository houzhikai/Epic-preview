{"version":3,"sources":["pages/Login.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","history","useHistory","useStores","AuthStore","UserStore","name","onFinish","values","setUsername","username","setPassword","password","login","then","pullUser","push","catch","console","log","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","type","htmlType"],"mappings":"4iBAMA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAQF,IAAOG,GAAV,KAILC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KAsGKI,UAjGG,WAChB,IAAMC,EAAUC,cADM,EAEWC,cAAzBC,EAFc,EAEdA,UAAWC,EAFG,EAEHA,UAqCnB,OACE,eAAChB,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,2BAEME,GAFN,IAGEY,KAAK,QAELC,SA3CW,SAAAC,GACfJ,EAAUK,YAAYD,EAAOE,UAC7BN,EAAUO,YAAYH,EAAOI,UAC7BR,EAAUS,QACPC,MAAK,WACJT,EAAUU,WACVd,EAAQe,KAAK,QACZC,OAAM,WACPC,QAAQC,IAAI,oEAoCZC,eAhCiB,SAACC,GACtBH,QAAQC,IAAI,UAAWE,IAyBrB,UAQE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,mCAEX,CACEC,UA7Ba,SAACC,EAAMC,GAE9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,aAgBX,SAaE,cAAC,IAAD,MAGF,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNjB,KAAK,WACLkB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,CACES,IAAK,EACLT,QAAS,mCAEX,CACEU,IAAK,GACLV,QAAS,qCAdf,SAkBE,cAAC,IAAMW,SAAP,MAIF,cAAC,IAAKf,KAAN,2BAAexB,GAAf,aACE,cAAC,IAAD,CAAQwC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/10.0ddd66fb.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { useStores } from '../stores'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Wrapper = styled.div`\r\n    max-width: 600px;\r\n    margin: 30px auto;\r\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n    border-radius: 6px;\r\n    background: rgb(255,255,255);\r\n    padding: 20px;\r\n`;\r\nconst Title = styled.h1`\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n`\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 18,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 18,\r\n  },\r\n};\r\n\r\n\r\nconst Component = () => {\r\n  const history = useHistory()\r\n  const { AuthStore, UserStore } = useStores()\r\n\r\n  const onFinish = values => {\r\n    AuthStore.setUsername(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.login()\r\n      .then(() => {\r\n        UserStore.pullUser()\r\n        history.push('/')\r\n      }).catch(() => {\r\n        console.log('登录失败，什么也不做')\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n\r\n\r\n  // Promise 对象有以下两个特点:\r\n  // 1、对象的状态不受外界影响。Promise 对象代表一个异步操作，有三种状态：\r\n  // pending: 初始状态，不是成功或失败状态。\r\n  // fulfilled: 意味着操作成功完成。\r\n  // rejected: 意味着操作失败。\r\n\r\n\r\n  // 有时需要将现有对象转为Promise对象，Promise.resolve方法就起到这个作用。\r\n  const validateUsername = (rule, value) => {\r\n    //   匹配字母、数字、下划线。等价于 [A-Za-z0-9_]\r\n    if (/\\W/.test(value)) return Promise.reject('只能是字母数字下划线')\r\n    if (value.length < 4 || value.length > 10) return Promise.reject('长度为4~10个字母')\r\n    return Promise.resolve()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>登录</Title>\r\n      <Form\r\n        // 对象，可以快速布局\r\n        {...layout}\r\n        name=\"basic\"\r\n\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '输入用户名!',\r\n            },\r\n            {\r\n              validator: validateUsername\r\n            }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '输入密码',\r\n            },\r\n            {\r\n              min: 4,\r\n              message: '最少4个字符'\r\n            },\r\n            {\r\n              max: 10,\r\n              message: '最多10个字符'\r\n            }\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Component"],"sourceRoot":""}